--In this SQL, I'm querying a database with multiple tables in it to --
--quantify statistics about customer and order data.--

SELECT *
FROM BIT_DB.customers
WHERE length (order_id) =6
AND order_id <> 'Order ID';

--How many orders were placed in January?--

SELECT *
FROM BIT_DB.JanSales
LIMIT 5;

SELECT COUNT (orderID)
FROM BIT_DB.JanSales
WHERE length (orderid) = 6
AND orderid <> 'Order ID';

--How many of those orders were for an iPhone?--

SELECT COUNT (orderID)
FROM BIT_DB.JanSales
WHERE length (orderid) = 6
AND orderid <> 'Order ID'
AND Product = 'iPhone';

--Select the customer account numbers for all --
--the orders that were placed in February.--

SELECT *
FROM BIT_DB.FebSales
LIMIT 5;

SELECT *
FROM BIT_DB.customers
LIMIT 5;

SELECT DISTINCT acctnum
FROM BIT_DB.customers a
INNER JOIN BIT_DB.FebSales b
ON a.order_id = b.orderID
WHERE length (orderid) = 6
AND orderid <> 'Order ID';

--Which product was the cheapest one sold in January, --
--and what was the price? (Multiple Solutions included).--

SELECT *
FROM BIT_DB.JanSales
LIMIT 5;

SELECT Product, MIN (price)
FROM BIT_DB.JanSales;

SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales);

SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

SELECT distinct product, MIN(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC LIMIT 1;

SELECT product, min(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC
LIMIT 1;

--What is the total revenue for each product sold in January?--

SELECT SUM (Quantity) * price AS total_revenue
FROM BIT_DB.JanSales
GROUP BY Product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, --
--how many of each were sold, and what was the total revenue?--

SELECT SUM (Quantity), Product, SUM (Quantity) * price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

--How many customers ordered more than 2 products at a time in February, --
--and what was the average amount spent for those customers?

SELECT COUNT (DISTINCT b.acctnum), AVG (Quantity * price) AS avg_spent
FROM BIT_DB.FebSales a
LEFT JOIN BIT_DB.customers b
ON a.orderid = b.order_id
WHERE a.Quantity > 2
AND length (orderid) = 6
AND orderid <> 'Order ID';

--Update to included next lesson.--

--Differentiating style of dates and LIKE statements.--

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate BETWEEN '02/13/09 00:00' AND '02/18/19 00:00';

SELECT location
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35';

SELECT SUM (Quantity)
FROM BIT_DB.FebSales
WHERE orderdate LIKE '02/18/19%';

SELECT DISTINCT Product
FROM BIT_DB.FebSales
WHERE Product LIKE '%Batteries%';

SELECT DISTINCT Product, Price
FROM BIT_DB.FebSales 
WHERE Price LIKE '%.99';

--List all the products sold in Los Angeles in February, and include how many of each were sold.--

SELECT Product, SUM (Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;
